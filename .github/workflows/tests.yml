name: Lint and unit tests

on:
  pull_request:
  workflow_dispatch:

jobs:
  setup:
    runs-on : ubuntu-latest
    strategy:
      matrix:
        node-version: ["16.13.2"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2.3.2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Prepare environment
        run: npm install -g npm@latest
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm install
  lint:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        node-version: ["16.13.2"]
    steps:
      - name: checkout Code
        uses: actions/checkout@v2.3.2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: restore node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm install
      - name: Run Eslint
        uses: reviewdog/action-eslint@v1
        with:
          reporter: github-check
          eslint_flags: '--ext .js --ext .json src/'
  unit:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        node-version: ["16.13.2"]
    steps:
      - name: checkout Code
        uses: actions/checkout@v2.3.2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: restore node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm install
      - name: Run Tests
        run: npm test
        shell: bash